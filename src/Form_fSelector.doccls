

Option Compare Database
Option Explicit


'********************************************************************
'*                                                                                                                                   Oct 7 2009
'*       USAGE NOTE:  This form must be opened by Function Show() of the cSelector class
'*
'********************************************************************
Public Event Selected(Value As String)

Private WithEvents m_lvw As MSComctlLib.Listview
Private m_lastKeyTime As Single
Private WithEvents m_builder As cListViewBuilder

'********************************************************************
'*                                                                                                   Jul 6 2005
'*       Properties
'*
'********************************************************************
Friend Property Get Selector() As cSelector
   Set Selector = mGlobal.LibSys.Dictionary.Item("Selector")
End Property

Friend Property Get Listview() As MSComctlLib.Listview
   If m_lvw Is Nothing Then Set m_lvw = Me.ListView0.Object
   Set Listview = m_lvw
End Property

Friend Property Get Value() As Variant
   If Listview.SelectedItem Is Nothing Then
      Value = Null
   Else
      Value = Listview.SelectedItem.Text
   End If
End Property
Friend Property Get ListViewBuilder() As cListViewBuilder
    If m_builder Is Nothing Then Set m_builder = New cListViewBuilder
    Set ListViewBuilder = m_builder
End Property

Friend Property Get ValueArray() As Variant
   Dim var
   If Me.Listview.SelectedItem Is Nothing Then
      ReDim var(0)
      var(0) = Null
   Else
      Dim i As Integer
      Dim count As Integer
      count = m_lvw.ColumnHeaders.count
      ReDim var(count - 1)
      For i = 1 To count
         If i = 1 Then
            var(0) = Me.Listview.SelectedItem.Text
         Else
            var(i - 1) = Me.Listview.SelectedItem.ListSubItems(i - 1).Text
         End If
      Next
   End If
   ValueArray = var
End Property


'********************************************************************
'*                                                                                                   Dec 14 2004
'*       Form Operations
'*
'********************************************************************
Private Sub Form_Open(Cancel As Integer)
On Error GoTo handler
   
   'set a reference to Me in the selectors
   Set Me.Selector.Form = Me
   'resize and center Me
   DoMoveResize

    
   With Me.Selector
      'set various display properties of the form
      Me.Caption = .Title
      Me.tbPrompt = .Prompt
      ListViewBuilder.Load(Me.ListView0, .SQL, .ColumnWidths, .Database).Rebuild
      'if the FindItem option exists, try to find it
      If .FindItemID > 0 Then FindListItem
   End With
   
   'set form level reference to the the list view object in the control
   Set m_lvw = Me.ListView0.Object
   '... and make sure nothing is selected
   Set m_lvw.SelectedItem = Nothing
   
final:
   Screen.MousePointer = 0
   Exit Sub
   
handler:
   Screen.MousePointer = 0
   Me.Visible = False
   Err.Raise Err.Number, Err.Source & " fSelector.Form_Open()", Err.Description
End Sub


'********************************************************************
'*                                                                                                   Apr 23 2005
'*       Command Button Event Handlers
'*
'********************************************************************
Private Sub cmdCancel_Click()
   Set Listview.SelectedItem = Nothing
   Me.Visible = False
End Sub

Private Sub cmdOK_Click()
   If Listview.SelectedItem Is Nothing Then
      MsgBox "Please click list item to select it", vbInformation, "Nothing Selected"
   Else
      RaiseEvent Selected(Nz(Me.Value, 0))
      Me.Visible = False
   End If
End Sub


'********************************************************************
'*                                                                                                                                   Jan 21 2010
'*       List View Event Handling   >
'*
'********************************************************************
Private Sub m_lvw_DblClick()
'  Dbl_Click selects item and closes form
   cmdOK_Click
End Sub

'********************************************************************
'*                                                                                                   Apr 23 2005
'*       Search Text Change
'*
'********************************************************************
Private Sub tbSearchText_Change()
   'we do a little trick here to make sure this works quickly,
   'set timer interval for every keystroke
   Me.TimerInterval = 15
End Sub

Private Sub Form_Timer()
   Dim where As String
   Me.TimerInterval = 0
   If Me.tbSearchText.Text <> "" Then where = GetWhereClause(Me.tbSearchText)
   ListViewBuilder.Rebuild where
End Sub

'********************************************************************
'*                                                                                                                                   Aug 20 2011
'*       Utilities>
'*
'********************************************************************
Private Sub DoMoveResize()
   Const BORDER_WIDTH = 120

   'the form is small in design view and ends up getting resized based on calling code's settings,
   'so here we centered it on the screen
   Dim move(1) As Long
   With Me.Selector
      'calculates how much difference there is between the design view size and the requested size, and divides by 2
      move(0) = Abs(.Width - Me.InsideWidth) / 2
      move(1) = Abs(.Height - Me.InsideHeight) / 4
      'then the form is moved and sized
      Me.move Me.WindowLeft - move(0), Me.WindowTop - move(1), .Width, .Height
   End With

   'set the height and width of the list box
   With Me.ListView0
      .Width = Me.InsideWidth - .Left - BORDER_WIDTH
      .Height = Me.InsideHeight - .top - BORDER_WIDTH * 3
      'make the tbSearchText textbox the same
      Me.tbSearchText.Width = .Width
   End With
   'move the form's buttons to the far right of the form
   Me.cmdOK.Left = Me.InsideWidth - Me.cmdOK.Width - BORDER_WIDTH
   Me.cmdCancel.Left = Me.cmdOK.Left
   'size the prompt
   Me.tbPrompt.Width = Me.InsideWidth - Me.tbPrompt.Left - Me.cmdOK.Width - BORDER_WIDTH * 2
   'move the label at the bottom
   Me.lbMessage.top = Me.InsideHeight - 0.2 * 1440

End Sub

Function GetWhereClause(Text As String) As String
'  Constructs a where clause to pass to the listview builder
   Dim i As Integer
   Dim where As String
   Dim prm As String
   
   prm = "'*" & Replace(Text, "'", "_") & "*'"
   For i = 1 To m_lvw.ColumnHeaders.count
      If m_lvw.ColumnHeaders(i).Width > 0 Then
         where = where & "[" & m_lvw.ColumnHeaders(i).Tag & "] LIKE " & prm & " Or "
      End If
   Next i
   'drop the trailing 'Or' if it exists
   If Right(where, 3) = "Or " Then where = Mid(where, 1, Len(where) - 3)
   GetWhereClause = where

End Function

Private Sub FindListItem()
'  If a FindItemID was specified in the selector call, this routine attempts to locate it.
   Dim Item As MSComctlLib.ListItem
   Set Item = Listview.FindItem(CStr(Me.Selector.FindItemID), lvwText, , lvwWhole)
   If Not Item Is Nothing Then
      Item.Selected = True
      Item.EnsureVisible
      On Error GoTo errIndexOutOfBounds
      Do While Not Listview.GetFirstVisible.Selected
         Set Item = Listview.ListItems(Item.Index + 1)
         Item.EnsureVisible
      Loop
      Me.ListView0.SetFocus
      On Error GoTo 0
   End If
   Exit Sub
   
errIndexOutOfBounds:
   If Err = 35600 Then
      'ignore - index out of bounds
   Else
      Err.Raise Err, Err.Source & " - FindListItem()"
   End If

End Sub

